name: E2E Tests - x402 Payments

on:
  # Run on pushes to main branches
  push:
    branches: [main, develop]
    paths:
      - 'apps/client/features/x402/**'
      - 'apps/client/features/grid/**'
      - 'apps/client/__tests__/e2e/**'
      - '.github/workflows/e2e-x402.yml'
  
  # Run on PRs
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/client/features/x402/**'
      - 'apps/client/features/grid/**'
      - 'apps/client/__tests__/e2e/**'
  
  # Daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - ephemeral
          - x402
          - performance

jobs:
  # Job 1: Check test wallet balance
  check-wallet:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: apps/client
        run: bun install
      
      - name: Restore Grid wallet credentials
        working-directory: apps/client
        env:
          TEST_GRID_SESSION_SECRETS: ${{ secrets.TEST_GRID_SESSION_SECRETS }}
          TEST_GRID_ACCOUNT: ${{ secrets.TEST_GRID_ACCOUNT }}
        run: |
          # Create __tests__/config directory if it doesn't exist
          mkdir -p __tests__/config
          
          # Write Grid credentials to secure storage simulation
          echo "$TEST_GRID_SESSION_SECRETS" > __tests__/config/grid_session_secrets.json
          echo "$TEST_GRID_ACCOUNT" > __tests__/config/grid_account.json
      
      - name: Check wallet balance
        id: balance_check
        working-directory: apps/client
        env:
          TEST_NETWORK: ${{ secrets.TEST_NETWORK || 'mainnet' }}
          TEST_WALLET_MIN_SOL: '0.01'
          TEST_WALLET_MIN_USDC: '1.0'
        run: |
          bun run test:wallet:check || echo "balance_low=true" >> $GITHUB_OUTPUT
      
      - name: Alert on low balance
        if: steps.balance_check.outputs.balance_low == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '⚠️ Test Wallet Balance Low',
              body: `The test wallet balance is below minimum thresholds.
              
              Please fund the wallet:
              - Minimum: 0.01 SOL + 1 USDC
              - Recommended: 0.1 SOL + 5 USDC
              
              Run \`bun run test:wallet:address\` to get the wallet address.`,
              labels: ['test-infrastructure', 'urgent']
            })

  # Job 2: Run ephemeral wallet tests
  test-ephemeral:
    runs-on: ubuntu-latest
    needs: check-wallet
    timeout-minutes: 15
    if: |
      github.event_name == 'pull_request' ||
      github.event.inputs.test_suite == 'all' ||
      github.event.inputs.test_suite == 'ephemeral'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: apps/client
        run: bun install
      
      - name: Restore Grid wallet credentials
        working-directory: apps/client
        env:
          TEST_GRID_SESSION_SECRETS: ${{ secrets.TEST_GRID_SESSION_SECRETS }}
          TEST_GRID_ACCOUNT: ${{ secrets.TEST_GRID_ACCOUNT }}
        run: |
          mkdir -p __tests__/config
          echo "$TEST_GRID_SESSION_SECRETS" > __tests__/config/grid_session_secrets.json
          echo "$TEST_GRID_ACCOUNT" > __tests__/config/grid_account.json
      
      - name: Run ephemeral wallet tests
        working-directory: apps/client
        env:
          TEST_NETWORK: ${{ secrets.TEST_NETWORK || 'mainnet' }}
          TEST_GRID_EMAIL: ${{ secrets.TEST_GRID_EMAIL }}
        run: |
          bun test __tests__/e2e/x402-payment.test.ts -t "EphemeralWalletManager"
      
      - name: Check balance after tests
        if: always()
        working-directory: apps/client
        run: bun run test:wallet:check

  # Job 3: Run full x402 payment tests (main branch only)
  test-x402-full:
    runs-on: ubuntu-latest
    needs: check-wallet
    timeout-minutes: 30
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      github.event_name == 'schedule' ||
      github.event.inputs.test_suite == 'all' ||
      github.event.inputs.test_suite == 'x402'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: apps/client
        run: bun install
      
      - name: Restore Grid wallet credentials
        working-directory: apps/client
        env:
          TEST_GRID_SESSION_SECRETS: ${{ secrets.TEST_GRID_SESSION_SECRETS }}
          TEST_GRID_ACCOUNT: ${{ secrets.TEST_GRID_ACCOUNT }}
        run: |
          mkdir -p __tests__/config
          echo "$TEST_GRID_SESSION_SECRETS" > __tests__/config/grid_session_secrets.json
          echo "$TEST_GRID_ACCOUNT" > __tests__/config/grid_account.json
      
      - name: Run x402 payment tests
        working-directory: apps/client
        env:
          TEST_NETWORK: ${{ secrets.TEST_NETWORK || 'mainnet' }}
          TEST_GRID_EMAIL: ${{ secrets.TEST_GRID_EMAIL }}
          TEST_X402_ENDPOINT: ${{ secrets.TEST_X402_ENDPOINT }}
        run: |
          bun test __tests__/e2e/x402-payment.test.ts -t "X402PaymentService"
      
      - name: Check balance after tests
        if: always()
        working-directory: apps/client
        run: bun run test:wallet:check
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: x402-test-results
          path: apps/client/__tests__/results/

  # Job 4: Performance tests (scheduled only)
  test-performance:
    runs-on: ubuntu-latest
    needs: check-wallet
    timeout-minutes: 45
    if: |
      github.event_name == 'schedule' ||
      github.event.inputs.test_suite == 'performance'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: apps/client
        run: bun install
      
      - name: Restore Grid wallet credentials
        working-directory: apps/client
        env:
          TEST_GRID_SESSION_SECRETS: ${{ secrets.TEST_GRID_SESSION_SECRETS }}
          TEST_GRID_ACCOUNT: ${{ secrets.TEST_GRID_ACCOUNT }}
        run: |
          mkdir -p __tests__/config
          echo "$TEST_GRID_SESSION_SECRETS" > __tests__/config/grid_session_secrets.json
          echo "$TEST_GRID_ACCOUNT" > __tests__/config/grid_account.json
      
      - name: Run performance tests
        working-directory: apps/client
        env:
          TEST_NETWORK: ${{ secrets.TEST_NETWORK || 'mainnet' }}
          TEST_GRID_EMAIL: ${{ secrets.TEST_GRID_EMAIL }}
        run: |
          bun test __tests__/e2e/x402-payment.test.ts -t "Performance"
      
      - name: Check balance after tests
        if: always()
        working-directory: apps/client
        run: bun run test:wallet:check
      
      - name: Generate performance report
        if: always()
        working-directory: apps/client
        run: |
          echo "## Performance Test Results" > $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Test run completed at $(date)" >> $GITHUB_STEP_SUMMARY
          bun run test:wallet:check >> $GITHUB_STEP_SUMMARY

  # Job 5: Daily wallet balance report
  daily-report:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: apps/client
        run: bun install
      
      - name: Restore Grid wallet credentials
        working-directory: apps/client
        env:
          TEST_GRID_SESSION_SECRETS: ${{ secrets.TEST_GRID_SESSION_SECRETS }}
          TEST_GRID_ACCOUNT: ${{ secrets.TEST_GRID_ACCOUNT }}
        run: |
          mkdir -p __tests__/config
          echo "$TEST_GRID_SESSION_SECRETS" > __tests__/config/grid_session_secrets.json
          echo "$TEST_GRID_ACCOUNT" > __tests__/config/grid_account.json
      
      - name: Generate daily report
        working-directory: apps/client
        run: |
          echo "## Daily Test Wallet Balance Report" > $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          bun run test:wallet:check >> $GITHUB_STEP_SUMMARY
